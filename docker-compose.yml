version: "3.8"

services:  
    nginx:
        image: nginx:1.15-alpine
        container_name: pocketdigest_nginx
        restart: always
        ports:
            - "80:80"
            - "443:443"
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        volumes:
            - ./data/nginx:/etc/nginx/conf.d
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        networks:
            - pocketdigest
    certbot:
        image: certbot/certbot
        container_name: pocketdigest_certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        networks:
            - pocketdigest
    db:
        image: pocket-digest-db:latest
        container_name: pocketdigest_db
        build:
            context: ./db
        ports:
            - 54320:${POSTGRES_PORT}
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - PGDATA=/pgdata
        volumes:
            - db-data:/var/lib/postgresql/data
        restart: always
        networks: 
            - pocketdigest
    pgadmin:
        image: dpage/pgadmin4
        container_name: pocketdigest_pgadmin
        depends_on:
            - db
        ports:
            - ${PGADMIN_LISTEN_PORT}:${PGADMIN_LISTEN_PORT}
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
            - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        restart: always
        networks: 
            - pocketdigest
    deno:
        image: pocket-digest-app:latest
        container_name: pocketdigest_app
        build: 
            context: .
            args:
                app_port: ${APP_PORT}
        depends_on:
            - nginx
            - db
        ports:
            - ${APP_PORT}:${APP_PORT}
        expose:
            - ${APP_PORT}
        environment:
            - APP_ENV=production
        restart: always
        networks: 
            - pocketdigest
networks:
  pocketdigest: {}

volumes:
    db-data:
    pgadmin-data: